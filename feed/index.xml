<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Cat Way]]></title>
  <link href="http://cat.hackingisbelieving.org//feed" rel="self"/>
  <link href="http://cat.hackingisbelieving.org//"/>
  <updated>2012-08-18T23:21:47+09:00</updated>
  <id>http://cat.hackingisbelieving.org//</id>
  <author>
    <name><![CDATA[Itoshi NIKAIDO]]></name>
    <email><![CDATA[dritoshi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to change key bindings in the RStudio console]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/08/16/how-to-change-key-bindings-in-the-rstudio-console/"/>
    <updated>2012-08-16T16:41:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/08/16/how-to-change-key-bindings-in-the-rstudio-console</id>
    <content type="html"><![CDATA[<p><a href="http://rstudio.org/">RStudio</a> のキーバインドを変える。ただし、Mac で。</p>

<p>統計解析環境R、最強のGUI環境 <a href="http://rstudio.org/">RStudio</a> を愛用しつつある。ほぼ emacs like な key binding にはなっているが、console でのコマンド履歴がカーソルの上下に設定されている。これだとホームポジションから手が離れるし、HHK Pro2 とかだとしんどい。これを Control + P, Control + N にそれぞれ割り当てたい。</p>

<p>そこで、KeyRemap4Mac でキーバインドを設定してみた。やりかたは、KeyRemap4Mac をインストールして、メニューバーから設定画面に入る。&#8221;Misc &amp; Uninstall&#8221; を選び、&#8221;Custom Setting&#8221; の &#8220;Open private.xml&#8221; を開く。これを適当なエディタで開いて、以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;root&gt;</span>
</span><span class='line'>  <span class="nt">&lt;appdef&gt;</span>
</span><span class='line'>      <span class="nt">&lt;appname&gt;</span>RSTUDIO<span class="nt">&lt;/appname&gt;</span>
</span><span class='line'>      <span class="nt">&lt;equal&gt;</span>org.rstudio.RStudio<span class="nt">&lt;/equal&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/appdef&gt;</span>
</span><span class='line'>  <span class="nt">&lt;item&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>RSTUDIO<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;list&gt;</span>
</span><span class='line'>          <span class="nt">&lt;item&gt;</span>
</span><span class='line'>              <span class="nt">&lt;name&gt;</span>Change Ctrl+P to Up-Arrow<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>              <span class="nt">&lt;appendix&gt;</span>(only in RStudio)<span class="nt">&lt;/appendix&gt;</span>
</span><span class='line'>                <span class="nt">&lt;identifier&gt;</span>private.RStdio_control_p_up_arrow<span class="nt">&lt;/identifier&gt;</span>
</span><span class='line'>                <span class="nt">&lt;only&gt;</span>RSTUDIO<span class="nt">&lt;/only&gt;</span>
</span><span class='line'>                <span class="nt">&lt;autogen&gt;</span>--KeyToKey-- KeyCode::P, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP<span class="nt">&lt;/autogen&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>          <span class="nt">&lt;item&gt;</span>
</span><span class='line'>              <span class="nt">&lt;name&gt;</span>Change Ctrl+N to Down-Arrow<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>              <span class="nt">&lt;appendix&gt;</span>(only in RStudio)<span class="nt">&lt;/appendix&gt;</span>
</span><span class='line'>                <span class="nt">&lt;identifier&gt;</span>private.RStdio_control_p_down_arrow<span class="nt">&lt;/identifier&gt;</span>
</span><span class='line'>                <span class="nt">&lt;only&gt;</span>RSTUDIO<span class="nt">&lt;/only&gt;</span>
</span><span class='line'>                <span class="nt">&lt;autogen&gt;</span>--KeyToKey-- KeyCode::N, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN<span class="nt">&lt;/autogen&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/item&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/list&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/item&gt;</span>
</span><span class='line'><span class="nt">&lt;/root&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、KeyRemap4MacBook の設定画面に戻って、&#8221;Change Key&#8221; を選択、画面右上の &#8220;ReloadXML&#8221; をクリックすると、以下のようになる。</p>

<p><img src="https://img.skitch.com/20120816-83px9quhd388wc6m8wi7ctsqpb.png" alt="R studio のキーバインドを変更する" /></p>

<p>ふたつともチェックして、RStudio の console で適当なコマンド入力して、Control + P, N してみると、ちゃんと履歴が表示される。めちゃくちゃ快適。<a href="https://twitter.com/ma_ko/status/235983572018810881">@ma_ko さんくす</a>。</p>

<p>参考:</p>

<ul>
<li><a href="http://pqrs.org/macosx/keyremap4macbook/xml.html.ja">private.xml Reference Manual</a></li>
<li><a href="http://orera.g.hatena.ne.jp/edvakf/20110531/1306858764">Mac版でEmacs風キーバインドがおかしい（とてもおかしい）のをなんとかする</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to install Octopress on your Github Pages]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/08/14/how-to-install-octopress-on-your-github-pages/"/>
    <updated>2012-08-14T11:44:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/08/14/how-to-install-octopress-on-your-github-pages</id>
    <content type="html"><![CDATA[<p>Octopress を GitHub Pages にインストールして設定するまでのメモ</p>

<h2>準備</h2>

<p>GitHub, git, Ruby 1.9.3, rvm を用意する。GitHub の username は dritoshi. 必要に応じて、Google アナリティクスのトラッキングID, disqus.com のアカウント、独自ドメインの設定に必要な情報を用意しておく。</p>

<h2>GitHub の準備</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir dritoshi.github.com
</span><span class='line'>cd dritoshi.github.com
</span><span class='line'>touch README.md
</span><span class='line'>git init
</span><span class='line'>git add *
</span><span class='line'>git commit -m 'first commit'
</span><span class='line'>git remote add origin git@github.com:dritoshi/dritoshi.github.com.git
</span><span class='line'>$ git push -u origin master</span></code></pre></td></tr></table></div></figure>


<h2>Octopress のインストール</h2>

<p>ひと階層上の octopress ディレクトリにインストールする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ..
</span><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>sudo gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h2>GitHub へインストールする</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<h2>Octopress の設定</h2>

<h3>各種機能</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>subl _config.yml</span></code></pre></td></tr></table></div></figure>


<p>Google アナリティクスのコード、G+ のアカウントID (URLに含まれる数字の列) などを用意しておき、_config.yml に反映させておく。コメントを有効にするためには、(disqus)[disqus.com] にアカウントを作成し、プログを登録しておく (独自ドメインを利用する場合はそちらを先に設定しておく)。自分で設定したプログの short name が必要になる。アカウントIDではない。</p>

<p>サイドバーに About me を表示するには、source/custom/asides/about.html を編集して、_config.yml の default_asides にファイル名を指定する。</p>

<h3>テーマ</h3>

<p>テーマを変えるには、github で配布されているテーマを探してきて、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone http://github.com/iwinux/compbits .themes/compbits 
</span><span class='line'>rake install\['compbits'\] # zsh はエスケープ
</span><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p>とする。</p>

<p>参考: <a href="https://github.com/imathis/octopress/wiki/List-Of-Octopress-Themes">List Of Octopress Themes</a></p>

<h3>独自ドメイン</h3>

<p>独自ドメインを設置するには、ドメインの設定をCNAME を設定して、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 'cat.hackingisbelieving.org' &gt; source/CNAME
</span><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<p>Google Apps で取得したドメイン名は、コントロールパネルの Domain settings, Adovanced DNA settings で発行される ドメイン管理会社のアカウントIDとパスワードを使って設定する。
https://www.google.com/a/cpanel/hackingisbelieving.org/DomainSettingsAdvancedDns</p>

<p>参考: <a href="http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/">Octopressのインストールから運用管理まで</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to write a new entry]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/08/14/how-to-write-a-new-entry/"/>
    <updated>2012-08-14T11:12:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/08/14/how-to-write-a-new-entry</id>
    <content type="html"><![CDATA[<h2>Blog entry の場合</h2>

<h3>Markdown ファイルの生成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /Users/itoshi/Projects/writing/octopress
</span><span class='line'>rake new_post\['How to write a new entry'\] # zsh はエスケープが必要</span></code></pre></td></tr></table></div></figure>


<h3>執筆</h3>

<p><a href="http://www.sublimetext.com/2">Sublime text 2</a> でエントリを執筆する。もちろん事前に sublime text 2 のコマンドを path に通しておく。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ln -s /Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl ~/opt/bin/subl</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>subl source/_posts/2012-08-14-how-to-write-a-new-entry.markdown</span></code></pre></td></tr></table></div></figure>


<p>Markdown の書きかたは、<a href="http://cat.hackingisbelieving.org//links">Links</a> にある。</p>

<h3>HTMLの生成とプレビュー</h3>

<p>まず始めに以下のようにする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>http://localhost:4000/ にブラウザでアクセスしてプレビューを確認する。</p>

<p>その後は、書くたびにブラウザをリドードすればよい。</p>

<h3>デプロイ</h3>

<p>github page 上の Octopress にデプロイする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<p>generate と deploy の両方を同時におこなうコマンド。generate し忘れがないように、これを使っている。</p>

<h2>ページの場合</h2>

<p>基本的には上の流れてほぼ同じ。最初のページ生成コマンドが違う。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /Users/itoshi/Projects/writing/octopress
</span><span class='line'>rake new_page\['How to write a new entry'\] # zsh はエスケープが必要</span></code></pre></td></tr></table></div></figure>


<p>生成されるファイルは、source/how-to-write-a-new-entry/index.markdown のようになる。</p>

<p>ナビゲーションバーに表示させるには、source/_includes/custom/navigation.html を編集する。</p>

<p>HTML生成やプレビュー、デプロイの流れは blog entry とまったく同じ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R Markdown with Octopress on your GitHub]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/08/13/r-markdown-with-octopress/"/>
    <updated>2012-08-13T19:12:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/08/13/r-markdown-with-octopress</id>
    <content type="html"><![CDATA[<p>R Markdown を GitHub Pages 上の Octopres にアップロートする方法についてメモしておく。</p>

<h2>準備</h2>

<p>Knitr の設定済みの状態からスタートする。RStudio 入れればそれでおしまい。次に Octopress の準備。これ読むひとはもう終わっているだろうから飛す。</p>

<p>Rmdを変換する関数は以下の通り。関数名が無駄に長い。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Rmd2md.for.octopress &lt;- function(input, base.url = "/") {
</span><span class='line'>    require(knitr)
</span><span class='line'>
</span><span class='line'>    opts_knit$set(base.url = base.url)
</span><span class='line'>    fig.path &lt;- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
</span><span class='line'>    output   &lt;- sub(".Rmd", ".markdown", input)
</span><span class='line'>
</span><span class='line'>    opts_chunk$set(fig.path = fig.path)
</span><span class='line'>    opts_chunk$set(fig.cap = "center")
</span><span class='line'>
</span><span class='line'>    render_jekyll()
</span><span class='line'>    knit(input, output = output, envir = parent.frame())
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>knit() ではなく、この関数を使うのは画像のパスをよきにはからうため。これを、~/.Rprofile あたりに書いておく。これで準備終了。</p>

<p>ここを参考にした。 http://jfisher-usgs.github.com/r/2012/07/03/knitr-jekyll/
ほかにも、Octpress のディレクトリを指定できると以下のステップが省けてよいかも。</p>

<h2>R Markdown を書く</h2>

<p>ファイル名を yyyy-mm-dd-file-name.Rmd として RStudio やらなにやらで R Markdown のファイルを作成する。次に、生成されたファイルの先頭に、Octopress 用のヘッダを挿入する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "R Markdown with Octopress"
</span><span class='line'>date: 2012-08-13 19:12
</span><span class='line'>comments: true
</span><span class='line'>categories: 
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>みたいな感じ。あとはひたすら書く。</p>

<h2>Octopress 用の Markdown へ変換する</h2>

<p>R を起動して、Markdown へ変換する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Rmd2md.for.octopress("yyyy-mm-dd.Rmd")</span></code></pre></td></tr></table></div></figure>


<h2>公開する</h2>

<p>変換したファイルを Octopress のディレクトリにコピーする。画像もコピーする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp yyyy-mm-dd.Rmd $OCTPRESS_HOME/source/_posts/
</span><span class='line'>cp -a yyyy-mm-dd $OCTPRESS_HOME/source/images/</span></code></pre></td></tr></table></div></figure>


<p>静的HTMLを生成して、preview したり、github へデプロイしたり。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd $OCTPRESS_HOME
</span><span class='line'>rake generate
</span><span class='line'>rake preview
</span><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NGS analysis with R and Bioconductor: 1st. Learning R]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/08/13/NGS-R-Bioconductor-1st/"/>
    <updated>2012-08-13T18:00:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/08/13/NGS-R-Bioconductor-1st</id>
    <content type="html"><![CDATA[<p>RとBioconductorでNGS解析: 1限 Rの基礎</p>

<h2>はじめに</h2>

<p>この文章は統合データベース講習会：AJACSみちのく2「RとBioconductorを使ったNGS解析」の講義資料です。</p>

<p>この文章の著作権は二階堂愛にあります。ファイルのダウンロード、印刷、複製、大量の印刷は自由におこなってよいです。企業、アカデミアに関わらず講義や勉強会で配布してもよいです。ただし販売したり営利目的の集まりで使用してはいけません。ここで許可した行為について二階堂愛に連絡や報告する必要はありません。常に最新版を配布したいので<strong>ネット上での再配布や転載は禁止</strong>します。ネット上でのリンクはご自由にどうぞ。内容についての問い合わせはお気軽にメールしてください。</p>

<h2>対象</h2>

<p>ここでは、本講義を理解する上で知っておきたい、Rの基本的な使いかたについて解説する。対象とするのはプログラミング初心者でRを利用したことがない人が対象である。</p>

<h2>準備</h2>

<p>まずは R をインストールする。http://rstudio.org/ から、利用しているOSに適した RStudio をインストールする。起動や終了は普通のアプリケーションと同じである。起動したときに3つのペイン(ウィンドウ内にある小窓)が見えるが、左下の console という部分に、Rのプログラムを書き込んでいく。</p>

<p>試しに以下のように入力して同じ結果になれば準備は終了である。ただし、あなたの環境では ## は表示されないが、それで正常である。## が付いていない行が、あなたが入力するコマンドである。## が付いている行は R が出力する結果であるので、あなたが入力することはない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="m">1</span> <span class="o">+</span> <span class="m">1</span>    <span class="c1"># 足し算</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="m">2</span> <span class="o">*</span> <span class="m">2</span>    <span class="c1"># かけ算</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 4</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="m">15</span> <span class="o">/</span> <span class="m">3</span>   <span class="c1"># 割り算</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 5</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="m">17</span> <span class="o">%%</span> <span class="m">3</span>  <span class="c1"># 余り</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="m">2</span><span class="o">^</span><span class="m">2</span>      <span class="c1"># べき乗</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 4</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>sqrt<span class="p">(</span><span class="m">2</span><span class="p">)</span>  <span class="c1"># 平方根</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 1.414</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>pi       <span class="c1"># $\pi$</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3.142</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>bmi <span class="o">&lt;-</span> <span class="m">57.8</span> <span class="o">/</span> <span class="m">1.63</span><span class="o">^</span><span class="m">2</span> <span class="c1"># Body Mass Index</span>
</span><span class='line'>bmi
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 21.75</span>
</span></code></pre></td></tr></table></div></figure>


<h2>学習範囲</h2>

<p>プログラミング言語を理解するときに必要なことは、以下の3つである。</p>

<ul>
<li>データ型とデータ構造を知る</li>
<li>基本の3つの処理の書きかたを理解する</li>
<li>自分が使う便利な機能(関数、パッケージ)を覚える</li>
</ul>


<p>この文章では、この3つについて簡単に説明する。</p>

<h2>データ型</h2>

<p>データ型 (data type) とはデータの形式のことを意味する。例えば数値や文字列、論理型などがある。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> c<span class="p">()</span>
</span><span class='line'>x
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## NULL</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>y <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'>y
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 1 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>z <span class="o">&lt;-</span> c<span class="p">(</span><span class="s">&quot;ATG&quot;</span><span class="p">,</span> <span class="s">&quot;GCG&quot;</span><span class="p">,</span> <span class="s">&quot;CTG&quot;</span><span class="p">,</span> <span class="s">&quot;TTA&quot;</span><span class="p">)</span>
</span><span class='line'>z
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;ATG&quot; &quot;GCG&quot; &quot;CTG&quot; &quot;TTA&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>b <span class="o">&lt;-</span> c<span class="p">(</span><span class="kc">TRUE</span><span class="p">,</span> <span class="kc">FALSE</span><span class="p">)</span>
</span><span class='line'>b
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1]  TRUE FALSE</span>
</span></code></pre></td></tr></table></div></figure>


<h3>データ型の変換</h3>

<p>異なるデータ型を行き来したい場合がある。多くのプログラムのエラーはここが原因となるため、データの型の変換方法と、型を調べる方法を理解することは重要である。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>y <span class="o">&lt;-</span> as.character<span class="p">(</span>y<span class="p">)</span>
</span><span class='line'>y
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;1&quot; &quot;2&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>as.numeric<span class="p">(</span>y<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 1 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>y
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;1&quot; &quot;2&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>型の確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>mode<span class="p">(</span><span class="m">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;numeric&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>mode<span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;character&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>is<span class="p">(</span><span class="m">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;numeric&quot; &quot;vector&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>is<span class="p">(</span><span class="s">&quot;1&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;character&quot;           &quot;vector&quot;              &quot;data.frameRowLabels&quot;</span>
</span><span class='line'><span class="c1">## [4] &quot;SuperClassMethod&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>データ構造</h2>

<p>前項ではデータを格納する型について解説した。このデータを集めて、決まった構造でデータを束ねておくのがデータ構造 (data structure) である。プログラミング言語が決まったデータ構造を提供することで、様々な計算が楽にできるようになる。なぜなら、データの中身が違っても構造が同じことを利用し汎用的な計算機能(関数)を用意できるからである。また、言語側で、データ構造に対する計算の効率を最適化しておくことができ、ユーザはそのデータ構造さえ使っておけば、高速化などに配慮しなくても良くなる。プログラム言語の善し悪しはこのデータ構造とそれを処理する機能の善し悪しによって決まるとも言える。</p>

<p>ここではRの基本的なデータ構造, vector, list, matrix, data frame について述べる。</p>

<h3>vector</h3>

<p>vector は1種類のデータ型からなる1次元データを格納するためのデータ構造である。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
</span><span class='line'>x
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3 2 4 1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>list</h3>

<p>list は複数のデータ型からなる1次元データを格納することができるデータ構造である。例えば文字列型と数値を同時に格納できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>y <span class="o">&lt;-</span> list<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
</span><span class='line'>y
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [[1]]</span>
</span><span class='line'><span class="c1">## [1] 3</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## [[2]]</span>
</span><span class='line'><span class="c1">## [1] 2</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## [[3]]</span>
</span><span class='line'><span class="c1">## [1] 4</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## [[4]]</span>
</span><span class='line'><span class="c1">## [1] 1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>matrix</h3>

<p>matrix は1種類のデータ型からなる2次元データを格納するためのデータ構造である。いわゆる行列を表現することができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>z <span class="o">&lt;-</span> matrix<span class="p">(</span>c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">3</span><span class="p">),</span> nrow <span class="o">=</span> <span class="m">3</span><span class="p">)</span>
</span><span class='line'>z
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">##      [,1] [,2] [,3] [,4]</span>
</span><span class='line'><span class="c1">## [1,]    3    2    4    1</span>
</span><span class='line'><span class="c1">## [2,]    2    0    5    3</span>
</span><span class='line'><span class="c1">## [3,]    1    1    7    3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>data frame</h3>

<p>data frame は複数のデータ型からなる2次元データを格納するためのデータ構造である。Excel などのスプレットシートをイメージすればよい。数値行列だけを持つ場合は、matrix のほうが data frame より高速である。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>d <span class="o">&lt;-</span> data.frame<span class="p">(</span>first <span class="o">=</span> c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="p">),</span> first.base <span class="o">=</span> c<span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">,</span> <span class="s">&quot;T&quot;</span><span class="p">,</span> <span class="s">&quot;G&quot;</span><span class="p">),</span> second <span class="o">=</span> c<span class="p">(</span><span class="m">4</span><span class="p">,</span>
</span><span class='line'>    <span class="m">5</span><span class="p">,</span> <span class="m">7</span><span class="p">),</span> second.base <span class="o">=</span> c<span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">,</span> <span class="s">&quot;G&quot;</span><span class="p">,</span> <span class="s">&quot;C&quot;</span><span class="p">))</span>
</span><span class='line'>d
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">##   first first.base second second.base</span>
</span><span class='line'><span class="c1">## 1     3          A      4           C</span>
</span><span class='line'><span class="c1">## 2     2          T      5           G</span>
</span><span class='line'><span class="c1">## 3     1          G      7           C</span>
</span></code></pre></td></tr></table></div></figure>


<h3>データ構造を確認する</h3>

<p>どんなデータ構造を利用しているかを確認する方法を述べる。自分が使っているデータ構造を理解しておかないと、プログラムのエラー(バグ)の原因となる。特定のデータ構造を前提としている機能を使うとき、データ構造や型が異なる場合は、自動的に型や構造を変換したり、エラーを出したりする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>is<span class="p">(</span>z<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;matrix&quot;    &quot;array&quot;     &quot;structure&quot; &quot;vector&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>is<span class="p">(</span>d<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;data.frame&quot; &quot;list&quot;       &quot;oldClass&quot;   &quot;vector&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>str<span class="p">(</span>d<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## &#39;data.frame&#39;:   3 obs. of  4 variables:</span>
</span><span class='line'><span class="c1">##  $ first      : num  3 2 1</span>
</span><span class='line'><span class="c1">##  $ first.base : Factor w/ 3 levels &quot;A&quot;,&quot;G&quot;,&quot;T&quot;: 1 3 2</span>
</span><span class='line'><span class="c1">##  $ second     : num  4 5 7</span>
</span><span class='line'><span class="c1">##  $ second.base: Factor w/ 2 levels &quot;C&quot;,&quot;G&quot;: 1 2 1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>データにアクセスする</h3>

<p>データ構造にデータを出し入れする方法を示す。行や列の各要素を示す番号を添字 (index) と呼ぶ。これを使ってデータを取り出したり、代入することが可能である。</p>

<p>まず vector の要素にアクセスする方法を示す。添字は一番左から1,2,3,&#8230; となる。プログラミング言語によっては、添字が 0 から始まるものもあるが、R は 1 であることに注意すること。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
</span><span class='line'>x<span class="p">[</span><span class="m">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="o">&lt;-</span> <span class="m">4</span>
</span><span class='line'>x
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 4 2 4 1</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[</span><span class="m">1</span>:<span class="m">2</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 4 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[</span><span class="m">1</span>:<span class="m">2</span><span class="p">]</span> <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">8</span><span class="p">)</span>
</span><span class='line'>x
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3 8 4 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に list の要素にアクセスする方法を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> list<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
</span><span class='line'>x<span class="p">[[</span><span class="m">1</span><span class="p">]]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[[</span><span class="m">2</span><span class="p">]]</span> <span class="o">&lt;-</span> <span class="m">5</span>
</span><span class='line'>x
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [[1]]</span>
</span><span class='line'><span class="c1">## [1] 3</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## [[2]]</span>
</span><span class='line'><span class="c1">## [1] 5</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## [[3]]</span>
</span><span class='line'><span class="c1">## [1] 4</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## [[4]]</span>
</span><span class='line'><span class="c1">## [1] 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>次は、matrix の要素にアクセスする方法を示す。横方向が行、縦方向が列であり、これは数学の行列と同じである。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> matrix<span class="p">(</span>c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">3</span><span class="p">),</span> nrow <span class="o">=</span> <span class="m">3</span><span class="p">)</span>
</span><span class='line'>x<span class="p">[</span><span class="m">1</span><span class="p">,</span> <span class="p">]</span>  <span class="c1"># 1行目にアクセス</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3 2 4 1</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[,</span> <span class="m">2</span><span class="p">]</span>  <span class="c1"># 2列目にアクセス</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 2 0 1</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">]</span>  <span class="c1"># 3行2列目にアクセス</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 1</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">[</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">]</span> <span class="o">&lt;-</span> <span class="m">9</span>  <span class="c1"># 3行2列目に9を</span>
</span><span class='line'>x<span class="p">[</span><span class="m">3</span><span class="p">,</span> <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 1 9 7 3</span>
</span></code></pre></td></tr></table></div></figure>


<p>最後に data frame の要素にアクセスする方法を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> data.frame<span class="p">(</span>first <span class="o">=</span> c<span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="p">),</span> first.base <span class="o">=</span> c<span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">,</span> <span class="s">&quot;T&quot;</span><span class="p">,</span> <span class="s">&quot;G&quot;</span><span class="p">),</span> second <span class="o">=</span> c<span class="p">(</span><span class="m">4</span><span class="p">,</span>
</span><span class='line'>    <span class="m">5</span><span class="p">,</span> <span class="m">7</span><span class="p">),</span> second.base <span class="o">=</span> c<span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">,</span> <span class="s">&quot;G&quot;</span><span class="p">,</span> <span class="s">&quot;C&quot;</span><span class="p">))</span>
</span><span class='line'>x<span class="p">$</span>first
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 3 2 1</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">$</span>first.base
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] A T G</span>
</span><span class='line'><span class="c1">## Levels: A G T</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x<span class="p">$</span>first.base <span class="o">&lt;-</span> c<span class="p">(</span><span class="s">&quot;T&quot;</span><span class="p">,</span> <span class="s">&quot;C&quot;</span><span class="p">,</span> <span class="s">&quot;A&quot;</span><span class="p">)</span>
</span><span class='line'>x<span class="p">$</span>first.base
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;T&quot; &quot;C&quot; &quot;A&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>3つの基本的な処理</h2>

<p>プログラミング言語は基本的には3つの処理の組み合わせで実行される。ダイクストラの構造化プログラミング (Structured Programming) では、基本的な処理として3つの処理が挙げられている。</p>

<p>順次: 書かれた順番に処理していく
反復: 条件が満されるまで処理を繰り返す
分岐: 条件が成立する場合は実行する</p>

<p>順次処理については、これまでも示してきた通りなので割愛するが、Rの場合は文単位 (行ではない) で上から下へと順次処理される。</p>

<p>次に反復処理について示す。ここでは、<em>for</em> を利用した繰り返しの構文を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>ans <span class="o">&lt;-</span> <span class="m">0</span>
</span><span class='line'><span class="kr">for</span> <span class="p">(</span>i in <span class="m">1</span>:<span class="m">10</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    ans <span class="o">&lt;-</span> ans <span class="o">+</span> i
</span><span class='line'><span class="p">}</span>
</span><span class='line'>ans
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] 55</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に <em>if</em> を使って条件によって処理を分岐してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>odd <span class="o">&lt;-</span> <span class="m">0</span>
</span><span class='line'>even <span class="o">&lt;-</span> <span class="m">0</span>
</span><span class='line'><span class="kr">for</span> <span class="p">(</span>i in <span class="m">1</span>:<span class="m">10</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">if</span> <span class="p">(</span>i<span class="o">%%</span><span class="m">2</span> <span class="o">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        even <span class="o">&lt;-</span> even <span class="o">+</span> i
</span><span class='line'>    <span class="p">}</span> <span class="kr">else</span> <span class="p">{</span>
</span><span class='line'>        odd <span class="o">&lt;-</span> odd <span class="o">+</span> i
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>cat<span class="p">(</span>even<span class="p">,</span> odd<span class="p">,</span> <span class="s">&quot;\n&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## 30 25</span>
</span></code></pre></td></tr></table></div></figure>


<h3>関数</h3>

<p>関数 (function) とは、便利な機能のひとかたまりにしたものである。プログラミング言語には様々な関数が定義されており、この関数の豊富さが言語の使い易さに深く関わっている。Rでは文字や数値の処理だけでなく、統計処理のための便利な関数が多数用意されている。関数は膨大にあるので、まず自分の使う関数だけを覚えておき、必要に応じてリファレンスや Web検索などで必要な関数を調べるのがお勧めである。</p>

<p>簡単な統計量を計算する関数を紹介する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>x <span class="o">&lt;-</span> <span class="m">1</span>:<span class="m">100</span>
</span><span class='line'>x.sum <span class="o">&lt;-</span> sum<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'>x.mean <span class="o">&lt;-</span> mean<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'>x.sd <span class="o">&lt;-</span> sd<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'>cat<span class="p">(</span>x.sum<span class="p">,</span> x.mean<span class="p">,</span> x.sd<span class="p">,</span> <span class="s">&quot;\n&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## 5050 50.5 29.01</span>
</span></code></pre></td></tr></table></div></figure>


<p>関数を自分で作ることもできる。自分がよく使う機能をまとめておくことで、プログラムの見通しもよくなったり、機能が再利用しやすくなったり、プログラムコードのメンテナンスしやすくなるなどのメリットが多いので、積極的に利用したい機能である。ひとつの関数はなるべくひとつの機能を果すようにし、画面1枚以内に収まる程度にするのがお勧めである。それが守られないときは、よく考えて、複数の関数に分割することが重要である。</p>

<p>ここでは簡単な関数の例として、DNA配列の相補鎖を計算する関数を定義してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>complement <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>x<span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">if</span> <span class="p">(</span>x <span class="o">==</span> <span class="s">&quot;A&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kr">return</span><span class="p">(</span><span class="s">&quot;T&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="kr">else</span> <span class="kr">if</span> <span class="p">(</span>x <span class="o">==</span> <span class="s">&quot;T&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kr">return</span><span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="kr">else</span> <span class="kr">if</span> <span class="p">(</span>x <span class="o">==</span> <span class="s">&quot;G&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kr">return</span><span class="p">(</span><span class="s">&quot;C&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="kr">else</span> <span class="kr">if</span> <span class="p">(</span>x <span class="o">==</span> <span class="s">&quot;C&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kr">return</span><span class="p">(</span><span class="s">&quot;G&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="kr">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="kr">return</span><span class="p">(</span><span class="s">&quot;N&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>complement<span class="p">(</span><span class="s">&quot;A&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;T&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>complement<span class="p">(</span><span class="s">&quot;G&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;C&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>complement<span class="p">(</span><span class="s">&quot;*&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## [1] &quot;N&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>定義されている関数の使い型を調べるには <em>help</em> を利用する。またRの良いところとして、関数の多くに実行例が付属していることである。これを実行するには、<em>example</em> を利用する。</p>

<h4>関数の使いかたを調べる</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>help<span class="p">(</span>sum<span class="p">)</span>
</span><span class='line'>example<span class="p">(</span>mean<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## meanR&gt; x &lt;- c(0:10, 50)</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## meanR&gt; xm &lt;- mean(x)</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## meanR&gt; c(xm, mean(x, trim = 0.10))</span>
</span><span class='line'><span class="c1">## [1] 8.75 5.50</span>
</span></code></pre></td></tr></table></div></figure>


<h2>パッケージを使う</h2>

<p>パッケージとは、複数の便利な関数をまとめて提供するものである。R のパッケージは CRAN と Bioconductor から配布されている。パッケージは世界中の開発者によって各々、開発されており、最新の統計手法から、あらゆる実験機器のデータを扱うものまで様々である。特に Bioconductor はバイオインフォマティクス関連のパッケージに特化しており、CRAN よりもソースコードのレビューやドキュメンテーションのルールが厳しく、パッケージが比較的良質に保たれている。</p>

<p>まず、CRANからパッケージをインストールする方法を述べる。パッケージはコマンドから簡単にインストールができ <em>install.packages</em> を利用する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>install.packages<span class="p">(</span><span class="s">&quot;ggplot2&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## The downloaded binary packages are in</span>
</span><span class='line'><span class="c1">##   /var/folders/cz/cny0ysmx205dnj0y2_34k8cc0000gn/T//Rtmp2To84t/downloaded_packages</span>
</span></code></pre></td></tr></table></div></figure>


<p>インストールが正常に終了していれば、以下のように <em>library</em> でパッケージの機能を読み込むことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span><span class="s">&quot;ggplot2&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に、Bioconductor からパッケージをダウンロードする。これにはまず専用の関数を <em>biocLite</em> を設定する必要がある。ここでは、<em>biocLite</em> を設定し、マウス脳トランスクリプトームデータ解析ツールである <em>BrainStars</em> パッケージをインストールする。
いろいろメッセージが表示されるが気にする必要はない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>source<span class="p">(</span><span class="s">&quot;http://bioconductor.org/biocLite.R&quot;</span><span class="p">)</span>
</span><span class='line'>biocLite<span class="p">(</span><span class="s">&quot;BrainStars&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## BioC_mirror: http://bioconductor.jp/</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Using R version 2.15, BiocInstaller version 1.4.7.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: 開けません：HTTP ステータスは &#39;404 Not Found&#39; です</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: 開けません：HTTP ステータスは &#39;404 Not Found&#39; です</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: unable to access index for repository</span>
</span><span class='line'><span class="c1">## http://brainarray.mbni.med.umich.edu/bioc/bin/macosx/leopard/contrib/2.15</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Installing package(s) &#39;BrainStars&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: 開けません：HTTP ステータスは &#39;404 Not Found&#39; です</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: 開けません：HTTP ステータスは &#39;404 Not Found&#39; です</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: unable to access index for repository</span>
</span><span class='line'><span class="c1">## http://brainarray.mbni.med.umich.edu/bioc/bin/macosx/leopard/contrib/2.15</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: 開けません：HTTP ステータスは &#39;404 Not Found&#39; です</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: 開けません：HTTP ステータスは &#39;404 Not Found&#39; です</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## Warning: unable to access index for repository</span>
</span><span class='line'><span class="c1">## http://brainarray.mbni.med.umich.edu/bioc/bin/macosx/leopard/contrib/2.15</span>
</span></code></pre></td></tr></table></div></figure>


<p>インストールしたパッケージは、CRANパッケージと同様に、<em>library</em> でインストールが可能である。ここでは、3つの遺伝子IDを指定し、それらの脳50領域の遺伝子発現量を取り出している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>library<span class="p">(</span>BrainStars<span class="p">)</span>
</span><span class='line'>ids <span class="o">&lt;-</span> c<span class="p">(</span><span class="s">&quot;1439627_at&quot;</span><span class="p">,</span> <span class="s">&quot;1439631_at&quot;</span><span class="p">,</span> <span class="s">&quot;1439633_at&quot;</span><span class="p">)</span>
</span><span class='line'>my.esets <span class="o">&lt;-</span> getBrainStars<span class="p">(</span>query <span class="o">=</span> ids<span class="p">,</span> type <span class="o">=</span> <span class="s">&quot;expression&quot;</span><span class="p">)</span>
</span><span class='line'>exprs<span class="p">(</span>my.esets<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">##                LS   LS.1     RS   RS.1 Cx_motor Cx_motor.1 Cx_cingulate</span>
</span><span class='line'><span class="c1">## 1439627_at 12.868 12.854  5.686  5.771    5.643      5.650        7.125</span>
</span><span class='line'><span class="c1">## 1439631_at  6.408  6.851  6.562  6.485    6.191      6.493        6.194</span>
</span><span class='line'><span class="c1">## 1439633_at 10.286 10.164 10.449 10.540   10.293     10.366       10.452</span>
</span><span class='line'><span class="c1">##            Cx_cingulate.1 OB_anterior OB_anterior.1 OB_posterior</span>
</span><span class='line'><span class="c1">## 1439627_at          7.657      10.992        10.772        10.83</span>
</span><span class='line'><span class="c1">## 1439631_at          6.539       7.315         7.445         7.45</span>
</span><span class='line'><span class="c1">## 1439633_at         10.421      10.243        10.340        10.37</span>
</span><span class='line'><span class="c1">##            OB_posterior.1    Pir  Pir.1    Tu  Tu.1 ventral_S ventral_S.1</span>
</span><span class='line'><span class="c1">## 1439627_at         10.592  6.263  5.842 8.711 8.297     5.557       5.459</span>
</span><span class='line'><span class="c1">## 1439631_at          7.807  7.019  6.966 6.674 6.667     6.766       6.654</span>
</span><span class='line'><span class="c1">## 1439633_at         10.338 10.735 10.845 9.657 9.823    10.081       9.937</span>
</span><span class='line'><span class="c1">##               CA1  CA1.1 CA2_CA3 CA2_CA3.1     DG   DG.1 A_anterior</span>
</span><span class='line'><span class="c1">## 1439627_at  6.477  7.560   6.044     6.419  8.213  8.600      6.147</span>
</span><span class='line'><span class="c1">## 1439631_at  6.469  6.562   6.759     6.314  6.796  6.843      6.815</span>
</span><span class='line'><span class="c1">## 1439633_at 10.611 10.637  10.267    10.221 10.948 10.956      9.842</span>
</span><span class='line'><span class="c1">##            A_anterior.1 A_posterior A_posterior.1     GP  GP.1 CPu_lateral</span>
</span><span class='line'><span class="c1">## 1439627_at        5.156       4.999         4.934  8.210 8.028       7.961</span>
</span><span class='line'><span class="c1">## 1439631_at        6.629       6.794         6.613  6.867 6.503       6.504</span>
</span><span class='line'><span class="c1">## 1439633_at        9.794      10.356        10.491 10.066 9.948       9.233</span>
</span><span class='line'><span class="c1">##            CPu_lateral.1 CPu_medial CPu_medial.1     MD   MD.1  VA_VL</span>
</span><span class='line'><span class="c1">## 1439627_at         7.956      7.665        7.469 11.754 12.097 12.284</span>
</span><span class='line'><span class="c1">## 1439631_at         6.536      6.417        6.654  6.467  6.543  6.735</span>
</span><span class='line'><span class="c1">## 1439633_at         9.171      9.408        9.245 11.452 11.459 10.871</span>
</span><span class='line'><span class="c1">##            VA_VL.1 VPM_VPL VPM_VPL.1     LG   LG.1     MG   MG.1     Hb</span>
</span><span class='line'><span class="c1">## 1439627_at  11.720  12.228    11.945 12.383 12.309 12.130 12.040 12.943</span>
</span><span class='line'><span class="c1">## 1439631_at   6.323   6.121     6.524  6.234  6.738  6.432  6.439  6.882</span>
</span><span class='line'><span class="c1">## 1439633_at  10.761  10.867    10.775 10.611 10.463 11.028 10.946  9.832</span>
</span><span class='line'><span class="c1">##              Hb.1 Pineal Pineal.1     M   M.1    ME  ME.1 Pituitary</span>
</span><span class='line'><span class="c1">## 1439627_at 12.993 10.500   10.418 9.154 8.963 6.477 6.633     5.038</span>
</span><span class='line'><span class="c1">## 1439631_at  6.917  8.658    8.619 7.096 6.844 8.122 8.344     7.431</span>
</span><span class='line'><span class="c1">## 1439633_at 10.133  8.645    8.950 9.524 9.837 9.260 8.916    10.298</span>
</span><span class='line'><span class="c1">##            Pituitary.1    SCN  SCN.1    MPA  MPA.1     SO   SO.1     Pa</span>
</span><span class='line'><span class="c1">## 1439627_at       4.505 11.140 10.935 10.826 11.055 10.234 10.369 10.331</span>
</span><span class='line'><span class="c1">## 1439631_at       8.091  7.081  7.358  6.861  6.996  6.623  6.538  6.880</span>
</span><span class='line'><span class="c1">## 1439633_at      10.470  8.846  8.977  9.337  9.023  9.647  9.585  9.489</span>
</span><span class='line'><span class="c1">##              Pa.1 SPa_ventral SPa_ventral.1 SPa_dorsal SPa_dorsal.1    DM</span>
</span><span class='line'><span class="c1">## 1439627_at 10.196      11.342        11.038      6.941        6.890 7.063</span>
</span><span class='line'><span class="c1">## 1439631_at  6.978       8.023         7.141      7.994        7.283 6.834</span>
</span><span class='line'><span class="c1">## 1439633_at  9.548       9.548         9.513      9.484        9.703 9.304</span>
</span><span class='line'><span class="c1">##             DM.1   VMH VMH.1   Arc Arc.1     LH  LH.1   PAG PAG.1     SC</span>
</span><span class='line'><span class="c1">## 1439627_at 6.580 5.898 6.079 6.212 6.736 10.061 9.855 6.723 7.451  8.381</span>
</span><span class='line'><span class="c1">## 1439631_at 7.252 6.707 6.938 7.088 7.065  6.703 6.734 6.757 6.720  6.902</span>
</span><span class='line'><span class="c1">## 1439633_at 9.518 9.437 9.377 9.407 9.035  9.570 9.356 9.807 9.985 10.178</span>
</span><span class='line'><span class="c1">##              SC.1     IC   IC.1   VTA VTA.1     SN   SN.1     Tg   Tg.1</span>
</span><span class='line'><span class="c1">## 1439627_at  9.588 10.655  7.416 7.060 6.054  7.071  8.107  6.141  8.989</span>
</span><span class='line'><span class="c1">## 1439631_at  6.917  6.891  6.631 7.721 7.366  6.185  6.171  6.762  6.785</span>
</span><span class='line'><span class="c1">## 1439633_at 10.239 10.180 10.324 9.732 9.896 10.090 10.053 10.125 10.295</span>
</span><span class='line'><span class="c1">##                Pn   Pn.1    MVe MVe.1 Cb_vermis Cb_vermis.1 Cb_lobe</span>
</span><span class='line'><span class="c1">## 1439627_at 11.019 11.206 10.069 10.41    13.023       12.88  12.953</span>
</span><span class='line'><span class="c1">## 1439631_at  6.562  6.508  6.547  6.52     7.789        7.57   7.641</span>
</span><span class='line'><span class="c1">## 1439633_at 10.635 10.673 10.355 10.43    10.614       10.51  10.683</span>
</span><span class='line'><span class="c1">##            Cb_lobe.1 Cb_nucleus Cb_nucleus.1 spinal_cord_anterior</span>
</span><span class='line'><span class="c1">## 1439627_at    13.105      9.774       10.216                7.581</span>
</span><span class='line'><span class="c1">## 1439631_at     7.819      6.534        6.508                6.352</span>
</span><span class='line'><span class="c1">## 1439633_at    10.771     10.593       10.547                9.931</span>
</span><span class='line'><span class="c1">##            spinal_cord_anterior.1 spinal_cord_posterior</span>
</span><span class='line'><span class="c1">## 1439627_at                  7.675                 9.452</span>
</span><span class='line'><span class="c1">## 1439631_at                  6.391                 6.695</span>
</span><span class='line'><span class="c1">## 1439633_at                  9.941                 9.976</span>
</span><span class='line'><span class="c1">##            spinal_cord_posterior.1 Retina Retina.1</span>
</span><span class='line'><span class="c1">## 1439627_at                   9.638  8.233    6.822</span>
</span><span class='line'><span class="c1">## 1439631_at                   6.507  7.340    6.641</span>
</span><span class='line'><span class="c1">## 1439633_at                  10.019  8.668    8.967</span>
</span></code></pre></td></tr></table></div></figure>


<h2>簡単な統計解析</h2>

<p>Rは、統計解析のための関数を多く持つため、あらゆる統計解析が可能である。ここでは簡単な例として、検定と回帰を取り上げる。</p>

<h3>検定</h3>

<p>ある遺伝子の発現量を測定したとしよう。ここでは、処理群(ここではExp)と対照群(ここではCont)でそれぞれ n = 3, つまり3回の biological replication の発現量を測定してあるとする。これを data frame に格納し、処理、対照群間の平均値の差の検定、ここではT検定を行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>gene <span class="o">&lt;-</span> data.frame<span class="p">(</span>sample <span class="o">=</span> c<span class="p">(</span><span class="s">&quot;Exp&quot;</span><span class="p">,</span> <span class="s">&quot;Exp&quot;</span><span class="p">,</span> <span class="s">&quot;Exp&quot;</span><span class="p">,</span> <span class="s">&quot;Cont&quot;</span><span class="p">,</span> <span class="s">&quot;Cont&quot;</span><span class="p">,</span> <span class="s">&quot;Cont&quot;</span><span class="p">),</span>
</span><span class='line'>    expression <span class="o">=</span> c<span class="p">(</span><span class="m">12.8</span><span class="p">,</span> <span class="m">13.7</span><span class="p">,</span> <span class="m">15.2</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">7.3</span><span class="p">,</span> <span class="m">9.9</span><span class="p">))</span>
</span><span class='line'>t.test<span class="p">(</span>expression ~ sample<span class="p">,</span> data <span class="o">=</span> gene<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">##   Welch Two Sample t-test</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## data:  expression by sample </span>
</span><span class='line'><span class="c1">## t = -5.26, df = 3.957, p-value = 0.006442</span>
</span><span class='line'><span class="c1">## alternative hypothesis: true difference in means is not equal to 0 </span>
</span><span class='line'><span class="c1">## 95 percent confidence interval:</span>
</span><span class='line'><span class="c1">##  -8.415 -2.585 </span>
</span><span class='line'><span class="c1">## sample estimates:</span>
</span><span class='line'><span class="c1">## mean in group Cont  mean in group Exp </span>
</span><span class='line'><span class="c1">##                8.4               13.9</span>
</span></code></pre></td></tr></table></div></figure>


<p>統計解析を行うときには <strong><em>必ず</em></strong> グラフを書いて、データの傾向を目視することを忘れてはならない。ここでは boxplot で2群の傾向を可視化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>plot<span class="p">(</span>expression ~ sample<span class="p">,</span> data <span class="o">=</span> gene<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="figure/unnamed-chunk-24.png" alt="plot of chunk unnamed-chunk-24" /></p>

<h3>回帰</h3>

<p>ここでは、一日ごとに遺伝子発現を測定したとする。この遺伝子発現が時間に応じてどのように変化しているか、その傾向を知りたいとする。そこで、一日ごとの発現量を data frame に格納し、回帰分析を行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>gene <span class="o">&lt;-</span> data.frame<span class="p">(</span>time <span class="o">=</span> c<span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">),</span> expression <span class="o">=</span> c<span class="p">(</span><span class="m">1.8</span><span class="p">,</span> <span class="m">3.7</span><span class="p">,</span> <span class="m">4.2</span><span class="p">,</span>
</span><span class='line'>    <span class="m">8</span><span class="p">,</span> <span class="m">10.3</span><span class="p">,</span> <span class="m">13.9</span><span class="p">))</span>
</span><span class='line'>gene.lm <span class="o">&lt;-</span> lm<span class="p">(</span>expression ~ time<span class="p">,</span> data <span class="o">=</span> gene<span class="p">)</span>
</span><span class='line'>gene.lm
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## Call:</span>
</span><span class='line'><span class="c1">## lm(formula = expression ~ time, data = gene)</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## Coefficients:</span>
</span><span class='line'><span class="c1">## (Intercept)         time  </span>
</span><span class='line'><span class="c1">##       0.976        2.403</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>summary<span class="p">(</span>gene.lm<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## Call:</span>
</span><span class='line'><span class="c1">## lm(formula = expression ~ time, data = gene)</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## Residuals:</span>
</span><span class='line'><span class="c1">##      1      2      3      4      5      6 </span>
</span><span class='line'><span class="c1">##  0.824  0.321 -1.582 -0.185 -0.288  0.910 </span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## Coefficients:</span>
</span><span class='line'><span class="c1">##             Estimate Std. Error t value Pr(&gt;|t|)</span>
</span><span class='line'><span class="c1">## (Intercept)    0.976      0.744    1.31  0.25978</span>
</span><span class='line'><span class="c1">## time           2.403      0.246    9.78  0.00061</span>
</span><span class='line'><span class="c1">## </span>
</span><span class='line'><span class="c1">## Residual standard error: 1.03 on 4 degrees of freedom</span>
</span><span class='line'><span class="c1">## Multiple R-squared: 0.96, Adjusted R-squared: 0.95 </span>
</span><span class='line'><span class="c1">## F-statistic: 95.6 on 1 and 4 DF,  p-value: 0.000613</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に生データと回帰分析によって得られた回帰直線を同時にプロットする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>plot<span class="p">(</span>gene<span class="p">,</span> type <span class="o">=</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> xlim <span class="o">=</span> c<span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">6</span><span class="p">),</span> ylim <span class="o">=</span> c<span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">14</span><span class="p">))</span>
</span><span class='line'>abline<span class="p">(</span>gene.lm<span class="p">,</span> col <span class="o">=</span> <span class="s">&quot;blue&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="figure/unnamed-chunk-26.png" alt="plot of chunk unnamed-chunk-26" /></p>

<h2>練習問題</h2>

<h3>問題1</h3>

<p>1から順に数字を表示しなさい。ただしその数が3で割り切れるならは数字のかわりに Fizz と、5で割り切れるなら Buzz と、3でも5でも割り切れる場合は FizzBuzz と表示しなさい (いわゆる FizzBuzz 問題と呼ばれており、プログラマならば、なにも参考にせずに、2分で解けなければならないと言われている)。</p>

<h3>問題2</h3>

<p>問題1を条件分岐を使わずに解きなさい。</p>

<h3>問題3</h3>

<p>以下のようにすると、Rに組み込まれているデータフレーム iris を読み込むことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>data<span class="p">(</span>iris<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>この <em>iris</em> の1から4列の各列の標準偏差を <em>for</em> を使って求めなさい。</p>

<h3>問題4</h3>

<p>問題2で利用した <em>iris</em> の列ごとの平均を <em>for</em> を使って求めなさい。</p>

<h3>問題5</h3>

<p>問題2を <em>for</em> を用いずに一行で求めなさい。ヒント: <em>sapply</em> あるいは、<em>colMeans</em> を <em>help</em> で調べる。</p>

<h3>問題6</h3>

<p>問題2で利用した <em>iris</em> の1から4列の各列の標準偏差を <em>for</em> を用いずに、sapply 関数を使って求めなさい。</p>

<h3>問題7</h3>

<p>「パッケージを使う」のパートで出てきた <em>exprs(my.esets)</em> を <em>boxplot</em> 関数を用いてプロットせよ。</p>

<h2>発展問題</h2>

<p>ここで解説したRプログラミングの知識がすでにあるという人は、講義を聞かずに以下の問題を解いていてもよい。ウェブ検索を駆使して答えよ。</p>

<h3>初級</h3>

<ul>
<li>前項の練習問題すべてを、ヘルプや検索を用いずに、20分以内に解け</li>
<li>講義資料中にある「DNA配列の相補鎖を計算する関数」を、関数を自作せずに、Rに組み込まれているたったひとつの関数で実現せよ。</li>
<li>練習問題1の結果をファイルを出力せよ。ただし一行ごとにひとつの数字または文字列を表示せよ。</li>
</ul>


<h3>中級</h3>

<ul>
<li>lapply, apply, sapply の違いについて述べよ。</li>
<li>Rに組み込みこまれている apply 族関数と plyr package で提供される関数について比較し説明せよ。</li>
<li>multicore package を利用して、練習問題1をマルチコアを使った並列計算するコードに直せ。</li>
</ul>


<h3>上級</h3>

<ul>
<li>Rのスコープについて解説せよ。ヒント: (環境、レキシカルスコープ)</li>
<li>総称関数とはなにか。<em>summary</em> か <em>plot</em> を例に説明せよ。</li>
<li>上記の回答をすべて、R markdown で執筆し、<a href="http://www.rpubs.com/">RPubs</a> にアップロードせよ。</li>
</ul>


<h2>次になにを学べばよいか</h2>

<p>何度も強調するが自分が必要な機能から学ぶのがよい。ただし最低限Rに実験データを取り込むために、ファイルの入出力の方法を学んでおくとよいであろう。具体的には、<em>read.csv</em>, <em>read.table</em>, <em>write.table</em> などである。またデータ型やデータタイプに関しては主要なものだけを説明しており、Rの機能を網羅しているわけではない。また、<em>for</em> ではなく <em>apply</em> 族と呼ばれる関数群を使うことや、反復処理ではなくベクトル計算を行うことなどの R らしいコーディングスタイルを学ぶことも重要である。最終的には自分のデータに合せて、Bioconductor, CRAN パッケージの使いかたを覚えるのが次の目標となる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sampling from Probability Density Function]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/31/sampling-from-probability-density-function/"/>
    <updated>2012-03-31T15:19:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/31/sampling-from-probability-density-function</id>
    <content type="html"><![CDATA[<p>前のメモの続き。</p>

<h3>モンテカルロ積分の例</h3>

<h4>非有界区間のモンテカルロ積分</h4>

<p>前回までは、非有界区間のモンテカルロ積分を $Uniform$ からサンプリングしたが、前回の関数 (CDF)、</p>

<p>$$ \Phi \left( x \right) = \int_{-\infty}<sup>{\infty}\frac{1}{</sup> \sqrt{2\pi} } { e }<sup>{</sup> \frac{t<sup>2}{2}</sup> }dt $$</p>

<p>はこれ自体が PDF になっているので、これから直接サンプリングするこで、モンテカルロ積分ができる。</p>

<p>このように被積分関数そのものが PDF になっている例を考える。まず標準正規分布変数 $Z \sim N(0, 1)$ と指示関数 $I(\cdot)$ があると考える。指示関数とは、集合の元がその集合の特定の部分集合に属するかどうかを指定することによって定義する関数である。ダミー変数を出力するときに使うような関数を考えればよい。<a href="http://ja.wikipedia.org/wiki/%E6%8C%87%E7%A4%BA%E9%96%A2%E6%95%B0">Wikipedia:指示関数</a></p>

<p>どのような $x$ についても $x$ で推定される正規分布の累積関数 $E[I(Z \leq x)] = P(Z \leq x) = \Phi(x)$ の値が存在する。</p>

<p>標準正規分布より無作為標本 $z_1, …, z_m$ を生成する。これらの標本平均は、</p>

<p>$$ \widehat { \Phi(x) }  = \frac{1}{m}\sum_{i=1}<sup>{m}I(z_i</sup> \leq x ) $$</p>

<p>となる。この値はその期待値に確率1で収束する。</p>

<p>R で書いてみよう。</p>

<div><script src='https://gist.github.com/2260262.js?file='></script>
<noscript><pre><code>x.num &lt;- 10
x &lt;- seq(0.1, 2.5, length = x.num)
m &lt;- 100
z &lt;- rnorm(m)

p &lt;- sapply( x, function(x) mean(z &lt; x) )

Phi &lt;- pnorm(x)

res &lt;- cbind(x, p, Phi)
print(t(res))

png(&quot;sampling_pdf.png&quot;)
matplot(res[,1], res[,2:3], type = &quot;o&quot;, xlab = &quot;x&quot;, ylab = &quot;CDF&quot;)
dev.off()</code></pre></noscript></div>


<p>コードの</p>

<pre><code>sapply( x, function(x) mean(z &lt; x) )
</code></pre>

<p>の部分を少し解説すると、sapply が x をひとつずつ取りだして、ベクトル z とすべてに対して大小を判定する。このときベクトルで計算されるので、z より小さいものが TRUE, z 以上のものが FALSE として、ベクトルで返ってくる。mean() は TRUE の数を数えあげて、その個数で割る。これによって、
$$ \widehat { \Phi(x) }  = \frac{1}{m}\sum_{i=1}<sup>{m}I(z_i</sup> \leq x ) $$
を達成している。</p>

<p>m = 100 ぐらいでこのぐらいになる。
<img src="http://img.skitch.com/20120402-caj59bgccmr8tdcexwha2kw892.png" alt="CDF" /></p>

<p>m = 10000 ぐらいやると区別がつかないレベルになる。</p>

<h3>まとめ</h3>

<p>モンテカルロ積分は、一様分布からサンプリングすることで、積分する手法だった。被積分関数がPDFの場合は、直接その分布からサンプリングすることによっても積分が可能だった。実装もとても簡単。</p>

<h3>次は?</h3>

<p>教科書的には、このあと推定量の標準誤差や誤差上限の議論をして、分散を減少させる方法を述べる。次に重点サンプリング、層別サンプリングなどと続くであろう。そしてMCMCへと続くのが定番か。現在読んでいる Rによる計算機統計学が羅列的で少し読みにくいので、計算統計II に移行するかな?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MCMC Tutorials on Web]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/31/mcmc-tutorials-on-web/"/>
    <updated>2012-03-31T15:00:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/31/mcmc-tutorials-on-web</id>
    <content type="html"><![CDATA[<p>ウェブにある MCMC の講義資料のリンク集</p>

<ol>
<li><a href="http://park.itc.u-tokyo.ac.jp/atstat/jss75shunen/Vol3.pdf">第III巻 数理・計算の統計科学 (北川源四郎・竹村彰通編)</a> の第10章「マルコフ連鎖モンテカルロ法入門」</li>
<li><a href="http://tombo.sub.jp/doc/esj55/MCMC.pdf">マルコフ連鎖モンテカルロ法 (総研大 山道真人)</a></li>
<li><a href="http://mihama-w3.n-fukushi.ac.jp/ins/kusuda/paper/mcmc_for_economics.pdf">経済分析のためのMCMC入門 (
日本福祉大 楠田康)</a></li>
<li><a href="http://www.sas.com/offices/asiapacific/japan/usergroups/wg/archive/041015mati.pdf">ベイズ統計学のMCMCとの出会い (塩野義製薬 町田ら)</a></li>
<li><a href="http://ito-hi.blog.so-net.ne.jp/2005-12-25">MCMCの勉強 (1),  Taglibro de H</a></li>
</ol>


<p>以上、敬称略</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monte Carlo for unbounded integration]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/30/monte-carlo-for-unbounded-integration/"/>
    <updated>2012-03-30T19:28:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/30/monte-carlo-for-unbounded-integration</id>
    <content type="html"><![CDATA[<p>前のメモの続き。</p>

<h3>モンテカルロ積分の例</h3>

<h4>非有界区間のモンテカルロ積分</h4>

<p>標準正規分布の累積分布関数を推定をしてみる。
$$ \Phi \left( x \right) = \int_{-\infty}<sup>{\infty}\frac{1}{</sup> \sqrt{2\pi} } { e }<sup>{</sup> \frac{t<sup>2}{2}</sup> }dt $$</p>

<p>積分範囲が非有界だが、左右対称な関数なので、$x \geq 0$ と $x &lt; 0$ に分けして考えることができる。なので $x \geq 0$ だけを考えて、</p>

<p>$$ \theta = \int_{0}<sup>{x}</sup> {e}<sup>{-t<sup>2/2}</sup></sup> dt $$</p>

<p>を推定すればよい。</p>

<p>戦略は2つある。例によって、$Uniform(0, x)$ から確率変数を生成して推定すればよいのだが、このままでは、CDFの値が変わるたびに、$Uniform$ のパラメータを変えなければならない。なので置換積分で、0 から 1 の区間にしてしまってから、$Uniform(0, 1)$ を生成し推定する。これがひとつの方法である。もうひとつの方法は、そのまま、$Uniform(0, x)$ を生成して推定する方法である。後者は計算機を使えばそれほど難しくなく、置換積分する必要もないので簡単である。置換積分については<a href="http://ja.wikisource.org/wiki/%E8%A7%A3%E6%9E%90%E6%A6%82%E8%AB%96/%E7%AC%AC3%E7%AB%A0/%E7%A9%8D%E5%88%86%E5%A4%89%E6%95%B0%E3%81%AE%E5%A4%89%E6%8F%9B">解析概論第3章</a>が詳しい。</p>

<p>両方とも実装してみる。</p>

<div><script src='https://gist.github.com/2250888.js?file='></script>
<noscript><pre><code>x.num &lt;- 10 
x &lt;- seq(0.1, 2.5, length = x.num)
m &lt;- 100000
u &lt;- runif(m)

# integration by substitution
cdf &lt;- numeric(x.num)
for ( i in 1:x.num ) {
  g   &lt;- x[i] * exp( -(u * x[i])^2 / 2)
  cdf[i] &lt;- mean(g) / sqrt(2 * pi) + 0.5
}  

# do not substitution
cdf.2 &lt;- numeric(x.num)
for ( i in 1:x.num ) {
  u &lt;- runif(m, 0, x[i])
  g &lt;- x[i] * exp( -(u)^2 / 2 )
  cdf.2[i] &lt;- mean(g) / sqrt(2 * pi) + 0.5
} 

phi &lt;- pnorm(x)

# plot
matplot(x[,1], x[,2:4], type = &quot;o&quot;, xlab = &quot;x&quot;, ylab = &quot;CDF&quot;)

# output
res &lt;- cbind(x, cdf, cdf.2, phi)
print(t(res))</code></pre></noscript></div>


<p>あえて m の数を小さくして実行してみた。前半はよくあっているが最後のほうが上手く推定できていない。もちろん乱数を使うので、毎度結果は違うのでまったく同じグラフになることはない。</p>

<p><img src="https://img.skitch.com/20120402-fm7isrugi6pn6srxy21kxm2tjq.png" title="CDF" alt="CDF" /></p>

<p>m = 10000 ぐらいから、もう見た目には差がわからないレベルになる。以下は m を10万にしたものグラフ。ほとんど一致している。</p>

<p><img src="https://img.skitch.com/20120402-t3t52gxat3fmfyhunsi85u8pu5.png," title="100000" alt="CDB (100000)" /></p>

<h3>次は?</h3>

<p>今回は、被積分関数自体が確率密度関数 (PDF) なので、$Uniform$ ではなく、この PDFから確率変数を生成させることで、積分の推定値を求めることができる。次はこれをやってみる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MCMC in R]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/29/mcmc-in-r/"/>
    <updated>2012-03-29T20:25:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/29/mcmc-in-r</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>必要にせまられて MCMC の勉強を始めるなど。<a href="http://www.amazon.co.jp/gp/product/4274068307?ie=UTF8&amp;tag=itoshitv-22&amp;linkCode=shr&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4274068307">Rによる計算機統計学</a>を必要なところだけ読んでいる。目的はベイズ回帰でMCMCが使われているあたりを理解すること。そのために</p>

<ul>
<li>2.1.7. で期待値の定義を確認</li>
<li>5.1-5.2 でモンテカルロ積分</li>
<li>9 から MCMC</li>
</ul>


<p>という流れを考えている。このメモは、2番目の途中まで。</p>

<h2>期待値</h2>

<p>まずは期待値の定義を確認する。確率変数 $X$ の平均は、期待値 $E[X]$ で表わす。Xが確率密度 $f$ で連続型であるなら、$X$ の期待値は
$$ E[X] = \int_{-\infty}<sup>{\infty}{xf(x)}dx</sup> $$
で与えられる。</p>

<p>確率密度関数fを持つ連続確率変数Xの関数 $g(x)$ の期待値は、
$$ E[g(x)]=\int _{ -\infty }<sup>{</sup> \infty  }{ g(x)f(x) } dx $$
で与えられる。</p>

<h2>モンテカルロ積分</h2>

<p>$g(x)$ という関数が存在し、$\int<em>{a}<sup>{b}{g(x)}dx$</sup> を計算したい。ここで
$$ E[g(x)]=\int </em>{ -\infty }<sup>{</sup> \infty}{ g(x)f(x) } dx $$
なので、無作為標本がXの確率分布から得ることができれば、$E[g(x)]$ の不偏推定量は標本平均になる。</p>

<h3>モンテカルロ積分の推定量 $\theta$ の計算手順</h3>

<ol>
<li>一様分布 Uniform(a, b) から、独立同分布 (iid) の確率変数 $X_1$, …, $X_m$ を生成</li>
<li>$\overline{ g(X) } = \frac{1}{m}\sum_{i=1}<sup>{m}g(X_i)$</sup> を計算する。</li>
<li>推定値は、$\hat{\theta} = (b - a)\overline{g(X)}$ になる。</li>
</ol>


<h3>モンテカルロ積分の例</h3>

<h4>単純モンテカルロ積分推定量</h4>

<p>$\theta = \int_{0}<sup>{1}</sup> g(x)$ を推定する問題を考えてみる。もし、$X_1, … X_m$ が一様分布 Uniform(0, 1) からの無作為標本である場合、</p>

<p>$$ \hat{ \theta } = \overline{ g_m(x) } = \frac{1}{m} \sum_{i=1}<sup>{m}g(X_i)</sup> $$</p>

<p>Rで実装してみる。</p>

<div><script src='https://gist.github.com/2250944.js?file='></script>
<noscript><pre><code>m &lt;- 100000
x &lt;- runif(m)

# Monte Carlo method
theta.hat &lt;- mean(exp(-x))

# numeric integral
theta &lt;- 1 - exp(-1)

results &lt;- sprintf(&quot;Theta hat: %f\nNumeric integral: %f\n&quot;, theta.hat, theta)
cat(results)

Theta hat: 0.629351
Numeric integral: 0.632121</code></pre></noscript></div>


<p>一様分布からサンプリングして平均するだけ。実装はとても簡単。結果もそこそこ似た感じ。</p>

<p>確率1で $E[g(X)] = \theta$に収束する (大数の強法則)。このときの単純モンテカルロ推定量は、$\overline{g_m(X)}$ となる。</p>

<p>区間が {a, b} の場合は、 $y = (t - a)(b -a)$ および $dy = (1/(b -a)) dt$ に変数変換してやるか、$Uniform(0,1)$ を区間内で別の密度関数に置き換えればよい。</p>

<h4>非有界区間のモンテカルロ積分</h4>

<p>標準正規分布の累積分布関数を推定する。
$$ \Phi \left( x \right) = \int_{-\infty}<sup>{\infty}\frac{1}{</sup> \sqrt{2\pi} } { e }<sup>{</sup> \frac{t<sup>2}{2}</sup> }dt $$</p>

<p>(つづく)</p>

<h2>ここまでのまとめ</h2>

<p>確率は確率分布関数の面積だと考えることができるので、確率を推定するために積分できると嬉しい。そのために、積分したい区間を期待値に均してしまってから、区間の分だけ足し合せればよい。そのとき、複雑な関数だと積分できないので、期待値の定義と元となる確率分布からのサンプリングをすることで、データから標本平均を計算し、積分するのがモンテカルロ積分ということか。</p>

<p>だから平均や分散の計算や積分などにMCMCが使われる、というオチ。</p>

<h2>次にやること</h2>

<ol>
<li>非有界区間のモンテカルロ積分について理解する</li>
<li>マルコフ連鎖の復習。特に詳細釣り合い条件と収束の話など。</li>
<li>MHアルゴリズムを理解し、ギブスサンプラーの復習</li>
<li>MHアルゴリズムの例と実装。</li>
<li>ベイズ回帰との関係の理解</li>
</ol>


<p><a href="http://park.itc.u-tokyo.ac.jp/atstat/jss75shunen/Vol3.pdf">第III巻 数理・計算の統計科学 (北川源四郎・竹村彰通編) </a> (pdf) の第10章「マルコフ連鎖モンテカルロ法入門」が非常にわかりやすいので、こちらも並行して読む予定。統計科学のフロンティア12「<a href="http://www.amazon.co.jp/gp/product/4000068520?ie=UTF8&amp;tag=itoshitv-22&amp;linkCode=shr&amp;camp=1207&amp;creative=8411&amp;creativeASIN=4000068520&amp;ref_=sr_1_1&amp;qid=1333101908&amp;sr=8-1">計算統計II</a>」も参考になりそう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New entry in Japanese]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/29/new-entry-in-japanese/"/>
    <updated>2012-03-29T20:13:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/29/new-entry-in-japanese</id>
    <content type="html"><![CDATA[<p>Cocoa Emacs で SKK 使おうとするとなにやら面倒なので、CotEditor を入れてみた。早速に日本語で書いてみる。ちゃんと表示されるかな?</p>

<p>コマンドラインから CotEditor を起動できるようにした。やり方は、~/zshrc に以下のように書いておく。</p>

<pre><code>alias c="/Applications/CotEditor.app $1"
</code></pre>

<p>こうしておくと、</p>

<pre><code>touch hoge.txt
c hoge.txt
</code></pre>

<p>で hoge.txt が CotEditor で開けるようになる。</p>

<p>さてこのページをどうやって使おうか。あまり宣伝しないで、自分に向けて自分のためだけに書くメモのように使うかな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing a equation in Octopress]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/29/writing-a-equation-in-octopress/"/>
    <updated>2012-03-29T18:42:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/29/writing-a-equation-in-octopress</id>
    <content type="html"><![CDATA[<p>This entry is test of <a href="http://www.mathjax.org/">MathJax</a> to show a equation in Octopress. I am going to write Tex in Octopress.</p>

<p>Let&#8217;s do some practice: <strong>Energy eigenstate</strong></p>


<pre><code>&lt;p&gt;$$
p_1^{(can, \beta)} = \frac{1}{1+e^{- \beta \Delta E}}
$$&lt;/p&gt;

&lt;p&gt;$$
p_2^{(can, \beta)} = \frac{e^{- \beta \Delta E}}{1+e^{- \beta \Delta E}}
$$&lt;/p&gt;
</code></pre>

<p>$$
p_1^{(can, \beta)} = \frac{1}{1+e^{- \beta \Delta E}}
$$</p>




<p>$$
p_2^{(can, \beta)} = \frac{e^{- \beta \Delta E}}{1+e^{- \beta \Delta E}}
$$</p>


<p>What&#8217;s happen&#8217;?</p>

<pre><code>$$ \begin{aligned} p_1^{(can, \beta)} &amp;amp; = \frac{1}{1+e^{- \beta \Delta E}} \\ p_2^{(can, \beta)} &amp;amp; = \frac{e^{- \beta \Delta E}}{1+e^{- \beta \Delta E}} \end{aligned} $$
</code></pre>

<p>$$ \begin{aligned} p_1^{(can, \beta)} &amp; = \frac{1}{1+e^{- \beta \Delta E}} &#92; p_2^{(can, \beta)} &amp; = \frac{e^{- \beta \Delta E}}{1+e^{- \beta \Delta E}} \end{aligned} $$</p>


<p>I will test inline mode, $p_{1}<sup>{(can,\beta)}$</sup> on Octopress.</p>

<p>Reference:
<a href="http://luikore.github.com/2011/09/good-things-learned-from-octopress/">Starting From Octopress</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, world]]></title>
    <link href="http://cat.hackingisbelieving.org//blog/2012/03/29/hello/"/>
    <updated>2012-03-29T14:33:00+09:00</updated>
    <id>http://cat.hackingisbelieving.org//blog/2012/03/29/hello</id>
    <content type="html"><![CDATA[<p>I am tring to use the <a href="http://octopress.org/">Octopress</a>, a cool static html generater on
GitHub Pages. This is first commit of the blog entry. Can you see me?
To setup a Octpress, I refer to this blog entry. <a href="http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/">Octopressのインストールから運用管理まで</a></p>

<p>I need to install text editor to write a blog entry in Terminal. AquaSKK
cannot work in Cocoa Emacs.</p>
]]></content>
  </entry>
  
</feed>
